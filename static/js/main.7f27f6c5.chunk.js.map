{"version":3,"sources":["components/Team.js","actions/index.js","components/Home.js","components/Roster.js","components/Stats.js","components/CareerStats.js","components/Player.js","components/Menu.js","components/App.js","reducers/index.js","index.js"],"names":["Team","getTeams","axios","get","then","res","data","teams","sort","a","b","name","localeCompare","catch","err","console","log","goToRosterDetails","teamId","localStorage","setItem","props","history","push","this","listTeams","team","map","item","Card","key","id","style","width","height","onClick","Image","src","alt","padding","Content","Header","fontSize","Group","centered","React","Component","connect","state","type","payload","withRouter","Home","Roster","getRoster","selectedTeamId","getItem","roster","goToPlayerDetails","playerId","listRoster","players","person","Table","Row","Cell","collapsing","primaryNumber","verticalAlign","fullName","paddingRight","batSide","code","pitchHand","weight","birthDate","Container","celled","inverted","striped","unstackable","selectable","HeaderCell","colSpan","Body","Stats","stat","position","recentYear","aggStatInfo","active","atBats","runs","hits","homeRuns","rbi","stolenBases","avg","obp","ops","wins","losses","era","gamesPlayed","gamesStarted","saves","inningsPitched","strikeOuts","whip","CareerStats","makeHeaderRow","makeTableRow","splits","obj","hasOwnProperty","season","teamName","league","totalBases","doubles","triples","baseOnBalls","intentionalWalks","caughtStealing","slg","groundOutsToAirouts","completeGames","shutouts","holds","saveOpportunities","earnedRuns","numberOfPitches","hitBatsmen","Segment","Player","player","aggregateData","primaryPosition","i","length","parseFloat","toFixed","ab","r","h","hr","sb","toString","replace","getRecentSplit","index","stats","group","displayName","selectedPlayerId","listPlayer","people","setState","aggInfo","Grid","Column","List","horizontal","Item","className","bordered","float","marginRight","marginBottom","as","firstName","middleName","lastName","Description","nickName","birthCity","birthStateProvince","birthCountry","draftYear","mlbDebutDate","MLBMenu","activeItem","handleItemClick","e","Menu","size","pointing","secondary","stackable","Link","to","Input","icon","placeholder","App","exact","path","component","combineReducers","listTeam","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"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","file":"static/js/main.7f27f6c5.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { listTeams } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Image } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass Team extends React.Component {\r\n    getTeams = () => {\r\n        return axios.get('https://statsapi.mlb.com/api/v1/teams?sportId=1')\r\n        .then((res) => {\r\n            return res.data.teams.sort((a,b) => a.name.localeCompare(b.name));\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    };\r\n\r\n    goToRosterDetails = (teamId) => {\r\n        localStorage.setItem(\"selectedTeam\", teamId);\r\n        this.props.history.push('/roster');\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getTeams().then((res) => {\r\n            this.props.listTeams(res);\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const team = this.props.teams.map((item) => {\r\n            return (\r\n                <Card \r\n                    key={item.id} \r\n                    style={{width: \"auto\", height: \"auto\"}}\r\n                    onClick = {() => this.goToRosterDetails(item.id)}\r\n                >\r\n                    <Image \r\n                        src={`https://www.mlbstatic.com/team-logos/${item.id}.svg`} \r\n                        alt={item.name} \r\n                        style={{\r\n                            height: \"200px\",\r\n                            width: \"195px\",\r\n                            padding: \"5px\"\r\n                        }}\r\n                    />\r\n                    <Card.Content>\r\n                        <Card.Header style={{fontSize: \"16px\"}}>\r\n                            {item.name}\r\n                        </Card.Header>\r\n                    </Card.Content>\r\n                </Card>\r\n\r\n            );\r\n        });\r\n        return (\r\n            <div>\r\n                <Card.Group centered>\r\n                {team} \r\n                </Card.Group>\r\n            </div>\r\n\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { teams: state.teams}\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    listTeams: listTeams\r\n}) (withRouter(Team));","export const listTeams = (teams) => {\r\n    return {\r\n        type: \"TEAM_LIST\",\r\n        payload: teams\r\n    };\r\n};\r\n\r\nexport const listRoster = (roster) => {\r\n    return {\r\n        type: \"ROSTER_LIST\",\r\n        payload: roster\r\n    };\r\n};\r\n\r\nexport const listPlayer = (player) => {\r\n    return {\r\n        type: \"PLAYER_LIST\",\r\n        payload: player\r\n    };\r\n};","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return <div>Home</div>;\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { listRoster } from '../actions';\r\nimport { Table, Image, Container } from 'semantic-ui-react'; \r\nimport './Roster.css';\r\n\r\nclass Roster extends React.Component {\r\n    getRoster = () => {\r\n        let selectedTeamId = localStorage.getItem(\"selectedTeam\");\r\n        return axios.get(`https://statsapi.mlb.com/api/v1/teams/${selectedTeamId}/roster/Active?hydrate=person(stats(type=season))`) \r\n        .then((res) => {\r\n            return res.data.roster;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    goToPlayerDetails = (playerId) => {\r\n        localStorage.setItem(\"selectedPlayer\", playerId);\r\n        this.props.history.push('/player');\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getRoster().then((res) => {\r\n            this.props.listRoster(res);\r\n        });\r\n    };\r\n\r\n    render() {\r\n        // TODO: group positions by pitcher, catchers, infield, outfield \r\n        const players = this.props.roster.map(({ person }) => {\r\n            return (\r\n                <Table.Row key={person.id} onClick = {() => this.goToPlayerDetails(person.id)}>\r\n                    <Table.Cell collapsing>{person.primaryNumber}</Table.Cell>\r\n                    <Table.Cell collapsing>\r\n                        <Image \r\n                            verticalAlign='middle'\r\n                            src={`https://securea.mlb.com/mlb/images/players/head_shot/${person.id}.jpg`}\r\n                            alt={person.fullName}\r\n                            style={{width: \"50px\", paddingRight: \"10px\"}}\r\n                        />\r\n                        <span>{person.fullName}</span>\r\n                    </Table.Cell>\r\n                    <Table.Cell collapsing>{person.batSide.code}/{person.pitchHand.code}</Table.Cell>\r\n                    <Table.Cell collapsing>{person.height}</Table.Cell>\r\n                    <Table.Cell collapsing>{person.weight}lbs</Table.Cell>\r\n                    <Table.Cell collapsing>{person.birthDate}</Table.Cell>\r\n                </Table.Row>\r\n            );\r\n        });\r\n        return (\r\n            <Container>\r\n                <Table celled inverted striped unstackable selectable>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell colSpan={6}>Active Players</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        <Table.Row>\r\n                            <Table.Cell>#</Table.Cell>\r\n                            <Table.Cell>Name</Table.Cell>\r\n                            <Table.Cell>B/T</Table.Cell>\r\n                            <Table.Cell>Ht</Table.Cell>\r\n                            <Table.Cell>Wt</Table.Cell>\r\n                            <Table.Cell>DOB</Table.Cell>\r\n                        </Table.Row>\r\n                        {players}\r\n                    </Table.Body>\r\n                </Table>\r\n            </Container>\r\n            \r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { roster: state.roster };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    listRoster: listRoster\r\n}) (withRouter(Roster));","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nconst Stats = (props) => {\r\n    const { stat, position, recentYear, aggStatInfo } = props;\r\n    if (position !== \"Pitcher\") {\r\n        return (\r\n            <Table celled unstackable>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Year</Table.HeaderCell>\r\n                        <Table.HeaderCell>AB</Table.HeaderCell>\r\n                        <Table.HeaderCell>R</Table.HeaderCell>\r\n                        <Table.HeaderCell>H</Table.HeaderCell>\r\n                        <Table.HeaderCell>HR</Table.HeaderCell>\r\n                        <Table.HeaderCell>RBI</Table.HeaderCell>\r\n                        <Table.HeaderCell>SB</Table.HeaderCell>\r\n                        <Table.HeaderCell>AVG</Table.HeaderCell>\r\n                        <Table.HeaderCell>OBP</Table.HeaderCell>\r\n                        <Table.HeaderCell>OPS</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell active>{recentYear}</Table.Cell>\r\n                        <Table.Cell>{stat.atBats}</Table.Cell>\r\n                        <Table.Cell>{stat.runs}</Table.Cell>\r\n                        <Table.Cell>{stat.hits}</Table.Cell>\r\n                        <Table.Cell>{stat.homeRuns}</Table.Cell>\r\n                        <Table.Cell>{stat.rbi}</Table.Cell>\r\n                        <Table.Cell>{stat.stolenBases}</Table.Cell>\r\n                        <Table.Cell>{stat.avg}</Table.Cell>\r\n                        <Table.Cell>{stat.obp}</Table.Cell>\r\n                        <Table.Cell>{stat.ops}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                        <Table.Cell active>MLB Career Stats</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.atBats}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.runs}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.hits}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.homeRuns}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.rbi}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.stolenBases}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.avg}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.obp}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.ops}</Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n            </Table>\r\n        );\r\n    } \r\n    else {\r\n        return (\r\n            <Table celled unstackable>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Year</Table.HeaderCell>\r\n                        <Table.HeaderCell>W</Table.HeaderCell>\r\n                        <Table.HeaderCell>L</Table.HeaderCell>\r\n                        <Table.HeaderCell>ERA</Table.HeaderCell>\r\n                        <Table.HeaderCell>G</Table.HeaderCell>\r\n                        <Table.HeaderCell>GS</Table.HeaderCell>\r\n                        <Table.HeaderCell>SV</Table.HeaderCell>\r\n                        <Table.HeaderCell>IP</Table.HeaderCell>\r\n                        <Table.HeaderCell>SO</Table.HeaderCell>\r\n                        <Table.HeaderCell>WHIP</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell active>{recentYear}</Table.Cell>\r\n                        <Table.Cell>{stat.wins}</Table.Cell>\r\n                        <Table.Cell>{stat.losses}</Table.Cell>\r\n                        <Table.Cell>{stat.era}</Table.Cell>\r\n                        <Table.Cell>{stat.gamesPlayed}</Table.Cell>\r\n                        <Table.Cell>{stat.gamesStarted}</Table.Cell>\r\n                        <Table.Cell>{stat.saves}</Table.Cell>\r\n                        <Table.Cell>{stat.inningsPitched}</Table.Cell>\r\n                        <Table.Cell>{stat.strikeOuts}</Table.Cell>\r\n                        <Table.Cell>{stat.whip}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                        <Table.Cell active>MLB Career Stats</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.wins}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.losses}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.era}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.gamesPlayed}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.gamesStarted}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.saves}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.inningsPitched}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.strikeOuts}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.whip}</Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n            </Table>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Stats;","import React from 'react';\r\nimport { Table, Segment } from 'semantic-ui-react';\r\n\r\nclass CareerStats extends React.Component {\r\n    makeHeaderRow = () => {\r\n        if (this.props.position !== \"Pitcher\") {\r\n            return (\r\n                <Table.Row>\r\n                    <Table.HeaderCell>Season</Table.HeaderCell>\r\n                    <Table.HeaderCell>Team</Table.HeaderCell>\r\n                    <Table.HeaderCell>League</Table.HeaderCell>\r\n                    <Table.HeaderCell>G</Table.HeaderCell>\r\n                    <Table.HeaderCell>AB</Table.HeaderCell>\r\n                    <Table.HeaderCell>R</Table.HeaderCell>\r\n                    <Table.HeaderCell>H</Table.HeaderCell>\r\n                    <Table.HeaderCell>TB</Table.HeaderCell>\r\n                    <Table.HeaderCell>2B</Table.HeaderCell>\r\n                    <Table.HeaderCell>3B</Table.HeaderCell>\r\n                    <Table.HeaderCell>HR</Table.HeaderCell>\r\n                    <Table.HeaderCell>RBI</Table.HeaderCell>\r\n                    <Table.HeaderCell>BB</Table.HeaderCell>\r\n                    <Table.HeaderCell>IBB</Table.HeaderCell>\r\n                    <Table.HeaderCell>SO</Table.HeaderCell>\r\n                    <Table.HeaderCell>SB</Table.HeaderCell>\r\n                    <Table.HeaderCell>CS</Table.HeaderCell>\r\n                    <Table.HeaderCell>AVG</Table.HeaderCell>\r\n                    <Table.HeaderCell>OBP</Table.HeaderCell>\r\n                    <Table.HeaderCell>SLG</Table.HeaderCell>\r\n                    <Table.HeaderCell>OPS</Table.HeaderCell>\r\n                    <Table.HeaderCell>GO/AO</Table.HeaderCell>\r\n                </Table.Row>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Table.Row>\r\n                    <Table.HeaderCell>Season</Table.HeaderCell>\r\n                    <Table.HeaderCell>Team</Table.HeaderCell>\r\n                    <Table.HeaderCell>League</Table.HeaderCell>\r\n                    <Table.HeaderCell>W</Table.HeaderCell>\r\n                    <Table.HeaderCell>L</Table.HeaderCell>\r\n                    <Table.HeaderCell>ERA</Table.HeaderCell>\r\n                    <Table.HeaderCell>G</Table.HeaderCell>\r\n                    <Table.HeaderCell>GS</Table.HeaderCell>\r\n                    <Table.HeaderCell>CG</Table.HeaderCell>\r\n                    <Table.HeaderCell>SHO</Table.HeaderCell>\r\n                    <Table.HeaderCell>HLD</Table.HeaderCell>\r\n                    <Table.HeaderCell>SV</Table.HeaderCell>\r\n                    <Table.HeaderCell>SVO</Table.HeaderCell>\r\n                    <Table.HeaderCell>IP</Table.HeaderCell>\r\n                    <Table.HeaderCell>H</Table.HeaderCell>\r\n                    <Table.HeaderCell>R</Table.HeaderCell>\r\n                    <Table.HeaderCell>ER</Table.HeaderCell>\r\n                    <Table.HeaderCell>HR</Table.HeaderCell>\r\n                    <Table.HeaderCell>NP</Table.HeaderCell>\r\n                    <Table.HeaderCell>HB</Table.HeaderCell>\r\n                    <Table.HeaderCell>BB</Table.HeaderCell>\r\n                    <Table.HeaderCell>IBB</Table.HeaderCell>\r\n                    <Table.HeaderCell>SO</Table.HeaderCell>\r\n                    <Table.HeaderCell>AVG</Table.HeaderCell>\r\n                    <Table.HeaderCell>WHIP</Table.HeaderCell>\r\n                    <Table.HeaderCell>GO/AO</Table.HeaderCell>\r\n                </Table.Row>\r\n            );\r\n        };\r\n    };\r\n    \r\n    makeTableRow = (splits) => {\r\n        if (this.props.position !== \"Pitcher\") {\r\n            const tableRow = splits.map((obj) => {\r\n                let key = obj.hasOwnProperty('team') ? obj.season + obj.team.name : obj.season;\r\n                let teamName = obj.hasOwnProperty('team') ? obj.team.name : 'Multiple teams';\r\n                let league = obj.hasOwnProperty('league') ? obj.league.name : '-';\r\n                return (\r\n                    <Table.Row key={key}>\r\n                        <Table.HeaderCell active>{obj.season}</Table.HeaderCell>\r\n                        <Table.Cell>{teamName}</Table.Cell>\r\n                        <Table.Cell>{league}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.gamesPlayed}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.atBats}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.runs}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.hits}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.totalBases}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.doubles}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.triples}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.homeRuns}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.rbi}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.baseOnBalls}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.intentionalWalks}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.strikeOuts}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.stolenBases}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.caughtStealing}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.avg}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.obp}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.slg}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.ops}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.groundOutsToAirouts}</Table.Cell>\r\n                    </Table.Row>\r\n                );\r\n            });\r\n            return tableRow;\r\n        }\r\n        else {\r\n            const tableRow = splits.map((obj) => {\r\n                console.log(obj);\r\n                let key = obj.hasOwnProperty('team') ? obj.season + obj.team.name : obj.season;\r\n                let teamName = obj.hasOwnProperty('team') ? obj.team.name : 'Multiple teams';\r\n                let league = obj.hasOwnProperty('league') ? obj.league.name : '-';\r\n                return (\r\n                    <Table.Row key={key}>\r\n                        <Table.HeaderCell active>{obj.season}</Table.HeaderCell>\r\n                        <Table.Cell>{teamName}</Table.Cell>\r\n                        <Table.Cell>{league}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.wins}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.losses}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.era}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.gamesPlayed}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.gamesStarted}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.completeGames}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.shutouts}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.holds}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.saves}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.saveOpportunities}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.inningsPitched}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.hits}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.runs}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.earnedRuns}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.homeRuns}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.numberOfPitches}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.hitBatsmen}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.baseOnBalls}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.intentionalWalks}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.strikeOuts}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.avg}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.whip}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.groundOutsToAirouts}</Table.Cell>\r\n                    </Table.Row>\r\n                );\r\n            });\r\n            return tableRow;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Segment>\r\n                <h2 style={{padding: \"5px\"}}>Career Stats</h2>\r\n                <Table celled unstackable>\r\n                    <Table.Header>\r\n                        {this.makeHeaderRow()}\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {this.makeTableRow(this.props.splits)}\r\n                    </Table.Body>\r\n                </Table>\r\n            </Segment>\r\n\r\n        )\r\n    };\r\n};\r\n\r\nexport default CareerStats;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Image, Segment, List, Item, Grid } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { listPlayer } from '../actions';\r\nimport Stats from './Stats';\r\nimport CareerStats from './CareerStats';\r\n\r\nimport './Player.css';\r\n\r\nclass Player extends React.Component {\r\n    state = {\r\n        player: {},\r\n        position: '',\r\n        splits: [],\r\n        stat: {}, \r\n        recentYear: 0,\r\n        aggStatInfo: {}\r\n    }\r\n    componentDidMount() {\r\n        let selectedPlayerId = localStorage.getItem(\"selectedPlayer\");\r\n        axios.get(`https://statsapi.mlb.com/api/v1/people/${selectedPlayerId}?hydrate=stats(group=[hitting,pitching,fielding],type=[yearByYear])`) \r\n        .then((res) => {\r\n            this.props.listPlayer(res.data.people[0]);\r\n            return res.data.people[0];\r\n        })\r\n        .then((player) => {\r\n            this.setState({position: player.primaryPosition.name});\r\n            return this.getRecentSplit(player);\r\n        })\r\n        .then((splits) => {\r\n            this.setState({splits: splits});\r\n            this.setState({stat: splits[splits.length - 1].stat});\r\n            this.setState({recentYear: splits[splits.length - 1].season});\r\n            return this.aggregateData(splits);\r\n        })\r\n        .then((aggInfo) => {\r\n            this.setState({aggStatInfo: aggInfo});\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    aggregateData = (splits) => {\r\n        let position = this.props.player.primaryPosition.name;\r\n        if (position === \"Pitcher\") {\r\n            let wins = 0, losses = 0, era = 0, gamesPlayed = 0, gamesStarted = 0, saves = 0, inningsPitched = 0, strikeOuts = 0, whip = 0;\r\n            for (let i = 0; i < splits.length; i++) {\r\n                wins += splits[i].stat.wins;\r\n                losses += splits[i].stat.losses;\r\n                era += splits[i].stat.era/splits.length;\r\n                gamesPlayed += splits[i].stat.gamesPlayed;\r\n                gamesStarted += splits[i].stat.gamesStarted;\r\n                saves += splits[i].stat.saves;\r\n                inningsPitched += parseFloat(splits[i].stat.inningsPitched);\r\n                strikeOuts += splits[i].stat.strikeOuts;\r\n                whip += parseFloat(splits[i].stat.whip)/splits.length;\r\n            }\r\n            return {\r\n                wins: wins,\r\n                losses: losses,\r\n                era: era.toFixed(2),\r\n                gamesPlayed: gamesPlayed,\r\n                gamesStarted: gamesStarted,\r\n                saves: saves,\r\n                inningsPitched: inningsPitched.toFixed(1),\r\n                strikeOuts: strikeOuts,\r\n                whip: whip.toFixed(2)\r\n            };\r\n        }\r\n        else {\r\n            let ab = 0, r = 0, h = 0, hr = 0, rbi = 0, sb = 0, avg = 0, obp = 0, ops = 0;\r\n            for (let i = 0; i < splits.length; i++) {\r\n                ab += splits[i].stat.atBats;\r\n                r += splits[i].stat.runs;\r\n                h += splits[i].stat.hits;\r\n                hr += splits[i].stat.homeRuns;\r\n                rbi += splits[i].stat.rbi;\r\n                sb += splits[i].stat.stolenBases;\r\n                avg += parseFloat(splits[i].stat.avg)/splits.length;\r\n                obp += parseFloat(splits[i].stat.obp)/splits.length;\r\n                ops += parseFloat(splits[i].stat.ops)/splits.length;\r\n            }\r\n            return {\r\n                atBats: ab,\r\n                runs: r,\r\n                hits: h,\r\n                homeRuns: hr,\r\n                rbi: rbi,\r\n                stolenBases: sb,\r\n                avg: avg.toFixed(3).toString().replace(/^0+/, ''),\r\n                obp: obp.toFixed(3).toString().replace(/^0+/, ''),\r\n                ops: ops.toFixed(3).toString().replace(/^0+/, '')\r\n            };\r\n        }\r\n    };\r\n\r\n    getRecentSplit = (player) => {\r\n        let index = 0;\r\n        for (let i = 0; i < player.stats.length; i++) {\r\n            if (player.primaryPosition.name !== \"Pitcher\" && player.stats[i].group.displayName === \"hitting\") {\r\n                index = i;\r\n            }\r\n            else if (player.primaryPosition.name === \"Pitcher\" && player.stats[i].group.displayName === \"pitching\") {\r\n                index = i;\r\n            }\r\n        }\r\n        return player.stats[index].splits;\r\n    };\r\n\r\n    render() {\r\n        const { stat, recentYear, aggStatInfo, position } = this.state;\r\n        const { player } = this.props;\r\n        return (\r\n            <Segment style={{height: \"100%\"}}>\r\n                <Grid>\r\n                    <Grid.Column width={11}>\r\n                        <div>\r\n                            <List horizontal>\r\n                                <List.Item><h1 className=\"highlight\">{player.primaryNumber}</h1></List.Item>\r\n                                <List.Item><h1>{player.fullName}</h1></List.Item>\r\n                            </List>\r\n                        </div>\r\n                        <Image \r\n                            src={`https://securea.mlb.com/mlb/images/players/head_shot/${player.id}.jpg`}\r\n                            alt={player.fullName}\r\n                            bordered\r\n                            style={{\r\n                                float:\"left\",\r\n                                marginRight: \"30px\",\r\n                                marginBottom: \"30px\"\r\n                            }}\r\n                        /> \r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Item.Header as=\"h2\">{player.firstName} {player.middleName} {player.lastName}</Item.Header>\r\n                                <Item.Description><strong>Nickname: </strong>{player.nickName}</Item.Description>\r\n                                <Item.Description><strong>Born: </strong>{player.birthDate}</Item.Description>\r\n                                <Item.Description><strong>Birth Location: </strong>{player.birthCity} {player.birthStateProvince}, {player.birthCountry}</Item.Description>\r\n                                <Item.Description><strong>Draft Year: </strong>{player.draftYear} </Item.Description>\r\n                                <Item.Description><strong>Debut: </strong>{player.mlbDebutDate} </Item.Description>\r\n\r\n                            </Item.Content>\r\n                        </Item>\r\n                        <Stats \r\n                            position={position} \r\n                            stat={stat} \r\n                            recentYear={recentYear} \r\n                            aggStatInfo={aggStatInfo}\r\n                        />\r\n                    </Grid.Column>\r\n                </Grid>\r\n                <CareerStats splits={this.state.splits} position={position}/>\r\n            </Segment>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { player: state.player };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    listPlayer: listPlayer\r\n}) (Player);","import React from 'react';\r\nimport { Menu, Segment, Input, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Menu.css';\r\n\r\nclass MLBMenu extends React.Component {\r\n    state = { activeItem: 'home' }\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n    \r\n    render() {\r\n      const { activeItem } = this.state\r\n  \r\n        return (\r\n            <Segment inverted className=\"headerMenu\">\r\n                <Menu size=\"large\" inverted pointing secondary stackable>\r\n                    <Menu.Item>\r\n                        <Image \r\n                            className=\"logo\"\r\n                            src=\"https://cdn.bleacherreport.net/images/team_logos/328x328/mlb_rumors.png\" \r\n                            alt=\"MLB Logo\" \r\n                        />\r\n                    </Menu.Item>\r\n                    <Menu.Item as={Link} to=\"/\"\r\n                        name='home'\r\n                        active={activeItem === 'home'}\r\n                        onClick={this.handleItemClick}\r\n                    />\r\n                    <Menu.Item as={Link} to=\"/team\"\r\n                        name='teams'\r\n                        active={activeItem === 'teams'}\r\n                        onClick={this.handleItemClick}\r\n                    />\r\n                    <Menu.Item as={Link} to=\"/roster\"\r\n                        name='roster'\r\n                        active={activeItem === 'roster'}\r\n                        onClick={this.handleItemClick}\r\n                    />\r\n                    <Menu.Item as={Link} to=\"/player\"\r\n                        name='players'\r\n                        active={activeItem === 'players'}\r\n                        onClick={this.handleItemClick}\r\n                    />\r\n                    <Menu.Menu position='right'>\r\n                        <Menu.Item>\r\n                            <Input icon='search' placeholder='Search...' />\r\n                        </Menu.Item>\r\n                    </Menu.Menu>\r\n                </Menu>\r\n            </Segment>\r\n        );\r\n    };\r\n};\r\n\r\nexport default MLBMenu;","import React from 'react';\r\nimport Team from './Team';\r\nimport Home from './Home';\r\nimport Roster from './Roster';\r\nimport Player from './Player';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport MLBMenu from './Menu';\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <MLBMenu/>\r\n                    <Route exact path=\"/\" component={Home} />  \r\n                    <Route exact path=\"/team\" component={Team} />\r\n                    <Route exact path=\"/roster\" component={Roster} />\r\n                    <Route exact path=\"/player\" component={Player} />\r\n                </div>\r\n            </Router>\r\n        );\r\n    };\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\nconst listTeamReducer = (listTeam=[], action) => {\r\n    if (action.type === \"TEAM_LIST\") {\r\n        return action.payload;\r\n    }\r\n    return listTeam;\r\n}\r\n\r\nconst listRosterReducer = (roster=[], action) => {\r\n    if (action.type === \"ROSTER_LIST\") {\r\n        return action.payload;\r\n    }\r\n    return roster;\r\n};\r\n\r\nconst listPlayerReducer = (player={}, action) => {\r\n    if (action.type === \"PLAYER_LIST\") {\r\n        return action.payload;\r\n    }\r\n    return player;\r\n};\r\n\r\nexport default combineReducers({\r\n    teams: listTeamReducer,\r\n    roster: listRosterReducer,\r\n    player: listPlayerReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}