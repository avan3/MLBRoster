{"version":3,"sources":["actions/index.js","components/Menu.js","components/Team.js","components/Home.js","components/Roster.js","components/Stats.js","components/CareerStats.js","components/Player.js","components/App.js","reducers/index.js","index.js"],"names":["changeActive","item","type","payload","MLBMenu","handleItemClick","e","name","props","activeItem","this","Segment","inverted","className","Menu","size","pointing","secondary","stackable","Item","as","Link","to","active","onClick","Image","src","alt","position","Input","icon","placeholder","React","Component","connect","state","roster","player","withRouter","Team","getTeams","axios","get","then","res","data","teams","sort","a","b","localeCompare","catch","err","console","log","goToRosterDetails","teamId","localStorage","setItem","history","push","listTeams","team","map","Card","key","id","style","width","height","padding","Content","Header","fontSize","Group","centered","Home","goToTeams","textAlign","display","alignItems","Button","margin","Roster","getRoster","selectedTeamId","getItem","goToPlayerDetails","playerId","listRoster","players","person","Table","Row","Cell","collapsing","primaryNumber","verticalAlign","fullName","paddingRight","batSide","code","pitchHand","weight","birthDate","Container","celled","striped","unstackable","selectable","HeaderCell","colSpan","Body","Stats","stat","recentYear","aggStatInfo","atBats","runs","hits","homeRuns","rbi","stolenBases","avg","obp","ops","wins","losses","era","gamesPlayed","gamesStarted","saves","inningsPitched","strikeOuts","whip","CareerStats","makeHeaderRow","makeTableRow","splits","obj","hasOwnProperty","season","teamName","league","totalBases","doubles","triples","baseOnBalls","intentionalWalks","caughtStealing","slg","groundOutsToAirouts","completeGames","shutouts","holds","saveOpportunities","earnedRuns","numberOfPitches","hitBatsmen","Player","aggregateData","primaryPosition","i","length","parseFloat","toFixed","ab","r","h","hr","sb","toString","replace","getRecentSplit","index","stats","group","displayName","selectedPlayerId","listPlayer","people","setState","aggInfo","Grid","Column","List","horizontal","bordered","float","marginRight","marginBottom","firstName","middleName","lastName","Description","nickName","birthCity","birthStateProvince","birthCountry","draftYear","mlbDebutDate","App","exact","path","component","combineReducers","listTeam","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"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","file":"static/js/main.081d32d5.chunk.js","sourcesContent":["export const listTeams = (teams) => {\r\n    return {\r\n        type: \"TEAM_LIST\",\r\n        payload: teams\r\n    };\r\n};\r\n\r\nexport const listRoster = (roster) => {\r\n    return {\r\n        type: \"ROSTER_LIST\",\r\n        payload: roster\r\n    };\r\n};\r\n\r\nexport const listPlayer = (player) => {\r\n    return {\r\n        type: \"PLAYER_LIST\",\r\n        payload: player\r\n    };\r\n};\r\n\r\nexport const changeActive = (item) => {\r\n    return {\r\n        type: \"CHANGE_ACTIVE\",\r\n        payload: item\r\n    };\r\n}; ","import React from 'react';\r\nimport { Menu, Segment, Input, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { changeActive } from '../actions';\r\nimport './Menu.css';\r\n\r\nclass MLBMenu extends React.Component {\r\n\r\n    handleItemClick = (e, { name }) => this.props.changeActive(name);\r\n\r\n    render() {\r\n        const { activeItem } = this.props;\r\n        return (\r\n            <Segment inverted className=\"headerMenu\">\r\n                <Menu size=\"large\" inverted pointing secondary stackable>\r\n                    <Menu.Item\r\n                        as={Link} to=\"/\"\r\n                        name='home'\r\n                        active={activeItem === 'home'}\r\n                        onClick={this.handleItemClick}\r\n                    >\r\n                        <Image \r\n                            className=\"logo\"\r\n                            src=\"https://cdn.bleacherreport.net/images/team_logos/328x328/mlb_rumors.png\" \r\n                            alt=\"MLB Logo\" \r\n                        />\r\n                    </Menu.Item>\r\n                    <Menu.Item as={Link} to=\"/team\"\r\n                        name='teams'\r\n                        active={activeItem === 'teams'}\r\n                        onClick={this.handleItemClick}\r\n                    />\r\n                    <Menu.Item as={Link} to=\"/roster\"\r\n                        name='roster'\r\n                        active={activeItem === 'roster'}\r\n                        onClick={this.handleItemClick}\r\n                    />\r\n                    <Menu.Item as={Link} to=\"/player\"\r\n                        name='players'\r\n                        active={activeItem === 'players'}\r\n                        onClick={this.handleItemClick}\r\n                    />\r\n                    <Menu.Menu position='right'>\r\n                        <Menu.Item>\r\n                            <Input icon='search' placeholder='Search...' />\r\n                        </Menu.Item>\r\n                    </Menu.Menu>\r\n                </Menu>\r\n            </Segment>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        roster: state.roster,\r\n        player: state.player, \r\n        activeItem: state.activeItem \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    changeActive: changeActive\r\n}) (withRouter(MLBMenu));","import React from 'react';\r\nimport axios from 'axios';\r\nimport { listTeams, changeActive } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Image } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router';\r\nimport MLBMenu from './Menu';\r\n\r\nclass Team extends React.Component {\r\n    getTeams = () => {\r\n        return axios.get('https://statsapi.mlb.com/api/v1/teams?sportId=1')\r\n        .then((res) => {\r\n            return res.data.teams.sort((a,b) => a.name.localeCompare(b.name));\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    };\r\n\r\n    goToRosterDetails = (teamId) => {\r\n        localStorage.setItem(\"selectedTeam\", teamId);\r\n        this.props.changeActive('roster');\r\n        this.props.history.push('/roster');\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getTeams().then((res) => {\r\n            this.props.listTeams(res);\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const team = this.props.teams.map((item) => {\r\n            return (\r\n                <Card \r\n                    key={item.id} \r\n                    style={{width: \"auto\", height: \"auto\"}}\r\n                    onClick = {() => this.goToRosterDetails(item.id)}\r\n                >\r\n                    <Image \r\n                        src={`https://www.mlbstatic.com/team-logos/${item.id}.svg`} \r\n                        alt={item.name} \r\n                        style={{\r\n                            height: \"200px\",\r\n                            width: \"195px\",\r\n                            padding: \"5px\"\r\n                        }}\r\n                    />\r\n                    <Card.Content>\r\n                        <Card.Header style={{fontSize: \"16px\"}}>\r\n                            {item.name}\r\n                        </Card.Header>\r\n                    </Card.Content>\r\n                </Card>\r\n\r\n            );\r\n        });\r\n        return (\r\n            <div>\r\n                <MLBMenu/>\r\n                <Card.Group centered>\r\n                {team} \r\n                </Card.Group>\r\n            </div>\r\n\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { teams: state.teams}\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    listTeams: listTeams,\r\n    changeActive: changeActive\r\n}) (withRouter(Team));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { changeActive } from '../actions';\r\nimport { Image, Button, Segment } from 'semantic-ui-react';\r\n\r\nclass Home extends React.Component {\r\n    goToTeams = () => {\r\n        this.props.changeActive('teams');\r\n        this.props.history.push('/team');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <Segment style={{\r\n                    display: \"flex\", \r\n                    alignItems: \"center\", \r\n                    height: \"80vh\", \r\n                    width: \"100vw\"\r\n                }} inverted>\r\n                    <Image \r\n                        className=\"logo\"\r\n                        src=\"https://cdn.bleacherreport.net/images/team_logos/328x328/mlb_rumors.png\" \r\n                        alt=\"MLB Logo\" \r\n                        size='large' \r\n                        centered\r\n                    />\r\n                    \r\n                </Segment>\r\n                <Button \r\n                    secondary\r\n                    size='big'\r\n                    onClick={this.goToTeams}\r\n                    style={{ margin: \"30px\", padding: \"20px 40px\" }}\r\n                >\r\n                    Enter\r\n                </Button>   \r\n            </div>\r\n            \r\n\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { activeItem: state.activeItem };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    changeActive: changeActive\r\n}) (withRouter(Home));","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { listRoster, changeActive } from '../actions';\r\nimport { Table, Image, Container } from 'semantic-ui-react'; \r\nimport MLBMenu from './Menu';\r\nimport './Roster.css';\r\n\r\nclass Roster extends React.Component {\r\n    getRoster = () => {\r\n        let selectedTeamId = localStorage.getItem(\"selectedTeam\");\r\n        return axios.get(`https://statsapi.mlb.com/api/v1/teams/${selectedTeamId}/roster/Active?hydrate=person(stats(type=season))`) \r\n        .then((res) => {\r\n            return res.data.roster;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    goToPlayerDetails = (playerId) => {\r\n        localStorage.setItem(\"selectedPlayer\", playerId);\r\n        this.props.changeActive('players');\r\n        this.props.history.push('/player');\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getRoster().then((res) => {\r\n            this.props.listRoster(res);\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const players = this.props.roster.map(({ person }) => {\r\n            return (\r\n                <Table.Row key={person.id} onClick = {() => this.goToPlayerDetails(person.id)}>\r\n                    <Table.Cell collapsing>{person.primaryNumber}</Table.Cell>\r\n                    <Table.Cell collapsing>\r\n                        <Image \r\n                            verticalAlign='middle'\r\n                            src={`https://securea.mlb.com/mlb/images/players/head_shot/${person.id}.jpg`}\r\n                            alt={person.fullName}\r\n                            style={{width: \"50px\", paddingRight: \"10px\"}}\r\n                        />\r\n                        <span>{person.fullName}</span>\r\n                    </Table.Cell>\r\n                    <Table.Cell collapsing>{person.batSide.code}/{person.pitchHand.code}</Table.Cell>\r\n                    <Table.Cell collapsing>{person.height}</Table.Cell>\r\n                    <Table.Cell collapsing>{person.weight}lbs</Table.Cell>\r\n                    <Table.Cell collapsing>{person.birthDate}</Table.Cell>\r\n                </Table.Row>\r\n            );\r\n        });\r\n        return (\r\n            <div>\r\n                <MLBMenu/>\r\n                <Container>\r\n                    <Table celled inverted striped unstackable selectable>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell colSpan={6}>Active Players</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            <Table.Row>\r\n                                <Table.Cell>#</Table.Cell>\r\n                                <Table.Cell>Name</Table.Cell>\r\n                                <Table.Cell>B/T</Table.Cell>\r\n                                <Table.Cell>Ht</Table.Cell>\r\n                                <Table.Cell>Wt</Table.Cell>\r\n                                <Table.Cell>DOB</Table.Cell>\r\n                            </Table.Row>\r\n                            {players}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </Container>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { roster: state.roster };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    listRoster: listRoster,\r\n    changeActive: changeActive\r\n}) (withRouter(Roster));","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nconst Stats = (props) => {\r\n    const { stat, position, recentYear, aggStatInfo } = props;\r\n    if (position !== \"Pitcher\") {\r\n        return (\r\n            <Table celled unstackable>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Year</Table.HeaderCell>\r\n                        <Table.HeaderCell>AB</Table.HeaderCell>\r\n                        <Table.HeaderCell>R</Table.HeaderCell>\r\n                        <Table.HeaderCell>H</Table.HeaderCell>\r\n                        <Table.HeaderCell>HR</Table.HeaderCell>\r\n                        <Table.HeaderCell>RBI</Table.HeaderCell>\r\n                        <Table.HeaderCell>SB</Table.HeaderCell>\r\n                        <Table.HeaderCell>AVG</Table.HeaderCell>\r\n                        <Table.HeaderCell>OBP</Table.HeaderCell>\r\n                        <Table.HeaderCell>OPS</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell active>{recentYear}</Table.Cell>\r\n                        <Table.Cell>{stat.atBats}</Table.Cell>\r\n                        <Table.Cell>{stat.runs}</Table.Cell>\r\n                        <Table.Cell>{stat.hits}</Table.Cell>\r\n                        <Table.Cell>{stat.homeRuns}</Table.Cell>\r\n                        <Table.Cell>{stat.rbi}</Table.Cell>\r\n                        <Table.Cell>{stat.stolenBases}</Table.Cell>\r\n                        <Table.Cell>{stat.avg}</Table.Cell>\r\n                        <Table.Cell>{stat.obp}</Table.Cell>\r\n                        <Table.Cell>{stat.ops}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                        <Table.Cell active>MLB Career Stats</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.atBats}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.runs}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.hits}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.homeRuns}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.rbi}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.stolenBases}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.avg}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.obp}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.ops}</Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n            </Table>\r\n        );\r\n    } \r\n    else {\r\n        return (\r\n            <Table celled unstackable>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Year</Table.HeaderCell>\r\n                        <Table.HeaderCell>W</Table.HeaderCell>\r\n                        <Table.HeaderCell>L</Table.HeaderCell>\r\n                        <Table.HeaderCell>ERA</Table.HeaderCell>\r\n                        <Table.HeaderCell>G</Table.HeaderCell>\r\n                        <Table.HeaderCell>GS</Table.HeaderCell>\r\n                        <Table.HeaderCell>SV</Table.HeaderCell>\r\n                        <Table.HeaderCell>IP</Table.HeaderCell>\r\n                        <Table.HeaderCell>SO</Table.HeaderCell>\r\n                        <Table.HeaderCell>WHIP</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell active>{recentYear}</Table.Cell>\r\n                        <Table.Cell>{stat.wins}</Table.Cell>\r\n                        <Table.Cell>{stat.losses}</Table.Cell>\r\n                        <Table.Cell>{stat.era}</Table.Cell>\r\n                        <Table.Cell>{stat.gamesPlayed}</Table.Cell>\r\n                        <Table.Cell>{stat.gamesStarted}</Table.Cell>\r\n                        <Table.Cell>{stat.saves}</Table.Cell>\r\n                        <Table.Cell>{stat.inningsPitched}</Table.Cell>\r\n                        <Table.Cell>{stat.strikeOuts}</Table.Cell>\r\n                        <Table.Cell>{stat.whip}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                        <Table.Cell active>MLB Career Stats</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.wins}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.losses}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.era}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.gamesPlayed}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.gamesStarted}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.saves}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.inningsPitched}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.strikeOuts}</Table.Cell>\r\n                        <Table.Cell>{aggStatInfo.whip}</Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n            </Table>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Stats;","import React from 'react';\r\nimport { Table, Segment } from 'semantic-ui-react';\r\n\r\nclass CareerStats extends React.Component {\r\n    makeHeaderRow = () => {\r\n        if (this.props.position !== \"Pitcher\") {\r\n            return (\r\n                <Table.Row>\r\n                    <Table.HeaderCell>Season</Table.HeaderCell>\r\n                    <Table.HeaderCell>Team</Table.HeaderCell>\r\n                    <Table.HeaderCell>League</Table.HeaderCell>\r\n                    <Table.HeaderCell>G</Table.HeaderCell>\r\n                    <Table.HeaderCell>AB</Table.HeaderCell>\r\n                    <Table.HeaderCell>R</Table.HeaderCell>\r\n                    <Table.HeaderCell>H</Table.HeaderCell>\r\n                    <Table.HeaderCell>TB</Table.HeaderCell>\r\n                    <Table.HeaderCell>2B</Table.HeaderCell>\r\n                    <Table.HeaderCell>3B</Table.HeaderCell>\r\n                    <Table.HeaderCell>HR</Table.HeaderCell>\r\n                    <Table.HeaderCell>RBI</Table.HeaderCell>\r\n                    <Table.HeaderCell>BB</Table.HeaderCell>\r\n                    <Table.HeaderCell>IBB</Table.HeaderCell>\r\n                    <Table.HeaderCell>SO</Table.HeaderCell>\r\n                    <Table.HeaderCell>SB</Table.HeaderCell>\r\n                    <Table.HeaderCell>CS</Table.HeaderCell>\r\n                    <Table.HeaderCell>AVG</Table.HeaderCell>\r\n                    <Table.HeaderCell>OBP</Table.HeaderCell>\r\n                    <Table.HeaderCell>SLG</Table.HeaderCell>\r\n                    <Table.HeaderCell>OPS</Table.HeaderCell>\r\n                    <Table.HeaderCell>GO/AO</Table.HeaderCell>\r\n                </Table.Row>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Table.Row>\r\n                    <Table.HeaderCell>Season</Table.HeaderCell>\r\n                    <Table.HeaderCell>Team</Table.HeaderCell>\r\n                    <Table.HeaderCell>League</Table.HeaderCell>\r\n                    <Table.HeaderCell>W</Table.HeaderCell>\r\n                    <Table.HeaderCell>L</Table.HeaderCell>\r\n                    <Table.HeaderCell>ERA</Table.HeaderCell>\r\n                    <Table.HeaderCell>G</Table.HeaderCell>\r\n                    <Table.HeaderCell>GS</Table.HeaderCell>\r\n                    <Table.HeaderCell>CG</Table.HeaderCell>\r\n                    <Table.HeaderCell>SHO</Table.HeaderCell>\r\n                    <Table.HeaderCell>HLD</Table.HeaderCell>\r\n                    <Table.HeaderCell>SV</Table.HeaderCell>\r\n                    <Table.HeaderCell>SVO</Table.HeaderCell>\r\n                    <Table.HeaderCell>IP</Table.HeaderCell>\r\n                    <Table.HeaderCell>H</Table.HeaderCell>\r\n                    <Table.HeaderCell>R</Table.HeaderCell>\r\n                    <Table.HeaderCell>ER</Table.HeaderCell>\r\n                    <Table.HeaderCell>HR</Table.HeaderCell>\r\n                    <Table.HeaderCell>NP</Table.HeaderCell>\r\n                    <Table.HeaderCell>HB</Table.HeaderCell>\r\n                    <Table.HeaderCell>BB</Table.HeaderCell>\r\n                    <Table.HeaderCell>IBB</Table.HeaderCell>\r\n                    <Table.HeaderCell>SO</Table.HeaderCell>\r\n                    <Table.HeaderCell>AVG</Table.HeaderCell>\r\n                    <Table.HeaderCell>WHIP</Table.HeaderCell>\r\n                    <Table.HeaderCell>GO/AO</Table.HeaderCell>\r\n                </Table.Row>\r\n            );\r\n        };\r\n    };\r\n    \r\n    makeTableRow = (splits) => {\r\n        if (this.props.position !== \"Pitcher\") {\r\n            const tableRow = splits.map((obj) => {\r\n                let key = obj.hasOwnProperty('team') ? obj.season + obj.team.name : obj.season;\r\n                let teamName = obj.hasOwnProperty('team') ? obj.team.name : 'Multiple teams';\r\n                let league = obj.hasOwnProperty('league') ? obj.league.name : '-';\r\n                return (\r\n                    <Table.Row key={key}>\r\n                        <Table.HeaderCell active>{obj.season}</Table.HeaderCell>\r\n                        <Table.Cell>{teamName}</Table.Cell>\r\n                        <Table.Cell>{league}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.gamesPlayed}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.atBats}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.runs}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.hits}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.totalBases}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.doubles}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.triples}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.homeRuns}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.rbi}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.baseOnBalls}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.intentionalWalks}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.strikeOuts}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.stolenBases}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.caughtStealing}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.avg}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.obp}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.slg}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.ops}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.groundOutsToAirouts}</Table.Cell>\r\n                    </Table.Row>\r\n                );\r\n            });\r\n            return tableRow;\r\n        }\r\n        else {\r\n            const tableRow = splits.map((obj) => {\r\n                let key = obj.hasOwnProperty('team') ? obj.season + obj.team.name : obj.season;\r\n                let teamName = obj.hasOwnProperty('team') ? obj.team.name : 'Multiple teams';\r\n                let league = obj.hasOwnProperty('league') ? obj.league.name : '-';\r\n                return (\r\n                    <Table.Row key={key}>\r\n                        <Table.HeaderCell active>{obj.season}</Table.HeaderCell>\r\n                        <Table.Cell>{teamName}</Table.Cell>\r\n                        <Table.Cell>{league}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.wins}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.losses}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.era}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.gamesPlayed}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.gamesStarted}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.completeGames}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.shutouts}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.holds}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.saves}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.saveOpportunities}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.inningsPitched}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.hits}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.runs}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.earnedRuns}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.homeRuns}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.numberOfPitches}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.hitBatsmen}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.baseOnBalls}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.intentionalWalks}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.strikeOuts}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.avg}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.whip}</Table.Cell>\r\n                        <Table.Cell>{obj.stat.groundOutsToAirouts}</Table.Cell>\r\n                    </Table.Row>\r\n                );\r\n            });\r\n            return tableRow;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Segment>\r\n                <h2 style={{padding: \"5px\"}}>Career Stats</h2>\r\n                <Table celled unstackable>\r\n                    <Table.Header>\r\n                        {this.makeHeaderRow()}\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {this.makeTableRow(this.props.splits)}\r\n                    </Table.Body>\r\n                </Table>\r\n            </Segment>\r\n\r\n        )\r\n    };\r\n};\r\n\r\nexport default CareerStats;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Image, Segment, List, Item, Grid } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { listPlayer } from '../actions';\r\nimport Stats from './Stats';\r\nimport CareerStats from './CareerStats';\r\nimport MLBMenu from './Menu';\r\n\r\nimport './Player.css';\r\n\r\nclass Player extends React.Component {\r\n    state = {\r\n        player: {},\r\n        position: '',\r\n        splits: [],\r\n        stat: {}, \r\n        recentYear: 0,\r\n        aggStatInfo: {}\r\n    }\r\n    componentDidMount() {\r\n        let selectedPlayerId = localStorage.getItem(\"selectedPlayer\");\r\n        axios.get(`https://statsapi.mlb.com/api/v1/people/${selectedPlayerId}?hydrate=stats(group=[hitting,pitching,fielding],type=[yearByYear])`) \r\n        .then((res) => {\r\n            this.props.listPlayer(res.data.people[0]);\r\n            return res.data.people[0];\r\n        })\r\n        .then((player) => {\r\n            this.setState({position: player.primaryPosition.name});\r\n            return this.getRecentSplit(player);\r\n        })\r\n        .then((splits) => {\r\n            this.setState({splits: splits});\r\n            this.setState({stat: splits[splits.length - 1].stat});\r\n            this.setState({recentYear: splits[splits.length - 1].season});\r\n            return this.aggregateData(splits);\r\n        })\r\n        .then((aggInfo) => {\r\n            this.setState({aggStatInfo: aggInfo});\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    aggregateData = (splits) => {\r\n        let position = this.props.player.primaryPosition.name;\r\n        if (position === \"Pitcher\") {\r\n            let wins = 0, losses = 0, era = 0, gamesPlayed = 0, gamesStarted = 0, saves = 0, inningsPitched = 0, strikeOuts = 0, whip = 0;\r\n            for (let i = 0; i < splits.length; i++) {\r\n                wins += splits[i].stat.wins;\r\n                losses += splits[i].stat.losses;\r\n                era += splits[i].stat.era/splits.length;\r\n                gamesPlayed += splits[i].stat.gamesPlayed;\r\n                gamesStarted += splits[i].stat.gamesStarted;\r\n                saves += splits[i].stat.saves;\r\n                inningsPitched += parseFloat(splits[i].stat.inningsPitched);\r\n                strikeOuts += splits[i].stat.strikeOuts;\r\n                whip += parseFloat(splits[i].stat.whip)/splits.length;\r\n            }\r\n            return {\r\n                wins: wins,\r\n                losses: losses,\r\n                era: era.toFixed(2),\r\n                gamesPlayed: gamesPlayed,\r\n                gamesStarted: gamesStarted,\r\n                saves: saves,\r\n                inningsPitched: inningsPitched.toFixed(1),\r\n                strikeOuts: strikeOuts,\r\n                whip: whip.toFixed(2)\r\n            };\r\n        }\r\n        else {\r\n            let ab = 0, r = 0, h = 0, hr = 0, rbi = 0, sb = 0, avg = 0, obp = 0, ops = 0;\r\n            for (let i = 0; i < splits.length; i++) {\r\n                ab += splits[i].stat.atBats;\r\n                r += splits[i].stat.runs;\r\n                h += splits[i].stat.hits;\r\n                hr += splits[i].stat.homeRuns;\r\n                rbi += splits[i].stat.rbi;\r\n                sb += splits[i].stat.stolenBases;\r\n                avg += parseFloat(splits[i].stat.avg)/splits.length;\r\n                obp += parseFloat(splits[i].stat.obp)/splits.length;\r\n                ops += parseFloat(splits[i].stat.ops)/splits.length;\r\n            }\r\n            return {\r\n                atBats: ab,\r\n                runs: r,\r\n                hits: h,\r\n                homeRuns: hr,\r\n                rbi: rbi,\r\n                stolenBases: sb,\r\n                avg: avg.toFixed(3).toString().replace(/^0+/, ''),\r\n                obp: obp.toFixed(3).toString().replace(/^0+/, ''),\r\n                ops: ops.toFixed(3).toString().replace(/^0+/, '')\r\n            };\r\n        }\r\n    };\r\n\r\n    getRecentSplit = (player) => {\r\n        let index = 0;\r\n        for (let i = 0; i < player.stats.length; i++) {\r\n            if (player.primaryPosition.name !== \"Pitcher\" && player.stats[i].group.displayName === \"hitting\") {\r\n                index = i;\r\n            }\r\n            else if (player.primaryPosition.name === \"Pitcher\" && player.stats[i].group.displayName === \"pitching\") {\r\n                index = i;\r\n            }\r\n        }\r\n        return player.stats[index].splits;\r\n    };\r\n\r\n    render() {\r\n        const { stat, recentYear, aggStatInfo, position } = this.state;\r\n        const { player } = this.props;\r\n        return (\r\n            <div>\r\n                <MLBMenu/>\r\n                <Segment style={{height: \"100%\"}}>\r\n                    <Grid>\r\n                        <Grid.Column width={11}>\r\n                            <div>\r\n                                <List horizontal>\r\n                                    <List.Item><h1 className=\"highlight\">{player.primaryNumber}</h1></List.Item>\r\n                                    <List.Item><h1>{player.fullName}</h1></List.Item>\r\n                                </List>\r\n                            </div>\r\n                            <Image \r\n                                src={`https://securea.mlb.com/mlb/images/players/head_shot/${player.id}.jpg`}\r\n                                alt={player.fullName}\r\n                                bordered\r\n                                style={{\r\n                                    float:\"left\",\r\n                                    marginRight: \"30px\",\r\n                                    marginBottom: \"30px\"\r\n                                }}\r\n                            /> \r\n                            <Item>\r\n                                <Item.Content>\r\n                                    <Item.Header as=\"h2\">{player.firstName} {player.middleName} {player.lastName}</Item.Header>\r\n                                    <Item.Description><strong>Nickname: </strong>{player.nickName}</Item.Description>\r\n                                    <Item.Description><strong>Born: </strong>{player.birthDate}</Item.Description>\r\n                                    <Item.Description><strong>Birth Location: </strong>{player.birthCity} {player.birthStateProvince}, {player.birthCountry}</Item.Description>\r\n                                    <Item.Description><strong>Draft Year: </strong>{player.draftYear} </Item.Description>\r\n                                    <Item.Description><strong>Debut: </strong>{player.mlbDebutDate} </Item.Description>\r\n\r\n                                </Item.Content>\r\n                            </Item>\r\n                            <Stats \r\n                                position={position} \r\n                                stat={stat} \r\n                                recentYear={recentYear} \r\n                                aggStatInfo={aggStatInfo}\r\n                            />\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                    <CareerStats splits={this.state.splits} position={position}/>\r\n                </Segment>\r\n            </div>            \r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { player: state.player };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    listPlayer: listPlayer\r\n}) (Player);","import React from 'react';\r\nimport Team from './Team';\r\nimport Home from './Home';\r\nimport Roster from './Roster';\r\nimport Player from './Player';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Route exact path=\"/\" component={Home} />  \r\n                    <Route exact path=\"/team\" component={Team} />\r\n                    <Route exact path=\"/roster\" component={Roster} />\r\n                    <Route exact path=\"/player\" component={Player} />\r\n                </div>\r\n            </Router>\r\n        );\r\n    };\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\nconst listTeamReducer = (listTeam=[], action) => {\r\n    if (action.type === \"TEAM_LIST\") {\r\n        return action.payload;\r\n    }\r\n    return listTeam;\r\n}\r\n\r\nconst listRosterReducer = (roster=[], action) => {\r\n    if (action.type === \"ROSTER_LIST\") {\r\n        return action.payload;\r\n    }\r\n    return roster;\r\n};\r\n\r\nconst listPlayerReducer = (player={}, action) => {\r\n    if (action.type === \"PLAYER_LIST\") {\r\n        return action.payload;\r\n    }\r\n    return player;\r\n};\r\n\r\nconst changeActiveReducer = (active=\"teams\", action) => {\r\n    if (action.type === \"CHANGE_ACTIVE\") {\r\n        return action.payload;\r\n    }\r\n    return active;\r\n};\r\n\r\nexport default combineReducers({\r\n    teams: listTeamReducer,\r\n    roster: listRosterReducer,\r\n    player: listPlayerReducer,\r\n    activeItem: changeActiveReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}